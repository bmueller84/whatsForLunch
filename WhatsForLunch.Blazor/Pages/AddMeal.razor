@page "/addmeal"
@using System.ComponentModel.DataAnnotations;
@using WhatsForLunch.Core;
@inject HttpClient Http
@inject IDatabaseProvider Db

<PageTitle>Neues Gericht</PageTitle>

<h1>Neues Gericht</h1>

<EditForm Model="@meal" OnValidSubmit="@Save">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>
            Name:
            <InputText @bind-Value="meal.Name" />
        </label>
    </p>

    <p>
        <label>
            Zutaten (mit Kommas separaiert):
            <InputText @bind-Value="meal.Ingredients" />
        </label>
    </p>

    <p>
        <label>
            Tags (mit Kommas separaiert):
            <InputText @bind-Value="meal.Tags" />
        </label>
    </p>

    <button type="submit">Speichern</button>
</EditForm>

@* <table class="table">
    <tbody>
        <tr>
            <td>Name</td>
            <td>
                <input type="text" @bind="@mealName" />
            </td>
        </tr>
        <tr>
            <td>Zutaten</td>
            <td>
                <input type="text" @bind="@ingredients" />
            </td>
        </tr>
        <tr>
            <td>Tags</td>
            <td>
                <input type="text" @bind="@tags" />
            </td>
        </tr>
        <tr>
            <td colspan="2" align="center">
                <button @onclick="Save">Speichern</button>
            </td>
        </tr>
    </tbody>
</table> *@

@code {
    private class MealBuilder
    {
        [Required]
        [StringLength(20, ErrorMessage = "Name is too long.")]
        public string? Name { get; set; }

        public string? Ingredients { get; set; }

        public string? Tags { get; set; }
    }

    private MealBuilder meal = new();

    private async Task Save()
    {
        var ingredientList = (meal.Ingredients ?? string.Empty)
            .Split(",", StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries)
            .Select(s => new Ingredient(s))
            .ToList();
        var tagList = (meal.Tags ?? string.Empty)
            .Split(",", StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries)
            .Select(t => new Tag(t))
            .ToList();

        await Db.AddMeal(new Meal(meal.Name!, DateTime.UtcNow)
        {
            Ingredients = ingredientList,
            Tags = tagList
        });
    }
}
